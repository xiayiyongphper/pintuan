<?php

namespace backend\models;

use backend\models\Product;
use Yii;

/**
 * This is the model class for table "pintuan_activity".
 *
 * @property int $id
 * @property string $title 标题
 * @property string $cover_picture 拼团活动封面图
 * @property int $product_id 商品id spu的id
 * @property int $specification_id 规格id  sku的id
 * @property int $wholesaler_id 供应商id
 * @property int $pin_price 拼团价
 * @property string $start_time 开始时间
 * @property string $end_time 结束时间
 * @property int $type 拼团类型：1-单点拼团，2-多点拼团
 * @property string $strategy 人数策略，json格式，如："{"base_member_num":{"after_start_min":1,"member_num":9},"auto_increment":{"before_end_min":60,"increment_cycle_min":10},"fill_before_end":{"before_end_min":5}}"
 * @property int $member_num 参团人数
 * @property int $continue_pintuan 超过可继续拼团 1是 2否
 * @property string $sort	排序权重
 * @property string $create_at
 * @property string $update_at
 * @property int $status 拼团活动是否手动结束：1未结束，2已结束
 * @property int $already_pin  虚拟已拼商品数量
 * @property int $del 是否删除：1-正常，2-删除
 */
class PintuanActivity extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'pintuan_activity';
    }

    /**
     * @return \yii\db\Connection the database connection used by this AR class.
     */
    public static function getDb()
    {
        return Yii::$app->get('productDb');
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['product_id', 'specification_id', 'wholesaler_id', 'pin_price', 'start_time', 'end_time', 'member_num', 'create_at','effective_hours','place_type'], 'required'],
            [['product_id', 'specification_id', 'wholesaler_id', 'type', 'member_num', 'continue_pintuan', 'del','already_pin', 'status','effective_hours','place_type'], 'integer'],
            [['start_time', 'end_time', 'create_at', 'update_at', 'sort', 'update_at'], 'safe'],
            [['title', 'cover_picture'], 'string', 'max' => 255],
            [['strategy'], 'string', 'max' => 256],
        ];
    }
    /**
     * @return \yii\db\ActiveQuery
     */
    public function getProduct()
    {
        return $this->hasOne(Product::className(), ['id' => 'product_id']);
    }
    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'title' => '活动标题',
            'cover_picture' => '封面图片',
            'product_id' => 'spu商品id',
            'specification_id' => 'sku规格商品id',
            'wholesaler_id' => '供应商的id',
            'pin_price' => '拼团价格',
            'start_time' => '开始时间',
            'end_time' => '结束时间',
            'type' => '拼团类型：1-单点拼团，2-多点拼团',
            'strategy' => '人数策略',
            'member_num' => '参团人数',
            'continue_pintuan' => '超过可继续拼团 1是 2否',
            'sort' => '排序',
            'create_at' => '创建时间',
            'update_at' => '更新时间',
            'status' => '拼团活动是否手动结束：1未结束，2已结束',
            'already_pin' => '虚拟已拼商品数量',
            'del' => '是否删除：1-正常，2-删除',
            'effective_hours '=>'有效时长',
            'place_type'=>'自提点类型',
        ];
    }

    public function beforeSave($insert)
    {
        $curTime = date('Y-m-d H:i:s');
        // 默认均为多点拼团
        if($insert){
            $this->type = 2;
            $this->create_at = $curTime;
        }
        $this->update_at = $curTime;
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    /**
     * 获取拼团活动的商品规格列表
     * @param $productId
     */
    public function getSpecifications($actId)
    {
          $where = [
              'pintuan_activity_specification.pintuan_activity_id'=>$actId,
              'pintuan_activity_specification.del'=>1
          ];

          $model = new \backend\models\PintuanActivitySpecification();
          $select = 'pintuan_activity_specification.*,specification.item_detail,specification.qty';
          $data = $model::find()->select($select)->where($where)->leftJoin('specification', 'specification.id=pintuan_activity_specification.specification_id')->asArray()->all();
          return $data;
    }

    /**
     * 拼团活动的商品价格信息
     * @return mixed
     */
    public function getSpecificationPrices($specification_ids)
    {
        $curDate = date('Y-m-d H:i:s', time());
        $where = [
            'pintuan_activity.status'=>1,
            'pintuan_activity.del'=>1,
            'pintuan_activity_specification.del'=>1
        ];
        $andWhere = [
             'and',
            ['<=', 'pintuan_activity.start_time', $curDate] ,
            ['>', 'pintuan_activity.end_time', $curDate]
        ];

        $andWhere2 = [];
        if ($specification_ids) {
            $andWhere2 = [
                'in', 'pintuan_activity_specification.specification_id', $specification_ids
            ];
        }

        $select = 'pintuan_activity_specification.pintuan_activity_id,pintuan_activity_specification.pin_price,pintuan_activity_specification.specification_id';
        $res = self::find()->select($select)->leftJoin('pintuan_activity_specification', 'pintuan_activity_specification.pintuan_activity_id=pintuan_activity.id')
            ->where($where)->andWhere($andWhere)->andWhere($andWhere2)->asArray()->all();
        return $res;
    }
}
