<?php

namespace backend\models;

use Yii;

/**
 * This is the model class for table "category".
 *
 * @property string $id
 * @property string $name 分类名称
 * @property int $parent_id
 * @property string $path 路径，记录祖辈分类id，比如：5/122/587
 * @property int $level 层级，目前有1，2，3
 * @property string $img 分类图片，目前只有三级分类有
 * @property string $create_at 创建时间
 * @property string $update_at 更新时间
 * @property int $del 是否删除：1-正常，2-删除
 */
class Category extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'category';
    }

    /**
     * @return \yii\db\Connection the database connection used by this AR class.
     */
    public static function getDb()
    {
        return Yii::$app->get('productDb');
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['name', /*'parent_id', 'path',*/ 'level'], 'required'],
            [['parent_id', 'level', 'del'], 'integer'],
            [['create_at', 'update_at'], 'safe'],
            [['name', 'path'], 'string', 'max' => 100],
            [['img'], 'string', 'max' => 256],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'name' => Yii::t('app', '名称'),
            'parent_id' => Yii::t('app', '父分类ID'),
            'path' => Yii::t('app', '路径'),
            'level' => Yii::t('app', '级别'),
            'img' => Yii::t('app', '图片'),
            'create_at' => Yii::t('app', 'Create At'),
            'update_at' => Yii::t('app', 'Update At'),
            'del' => Yii::t('app', 'Del'),
        ];
    }

    public function beforeSave($insert)
    {
        //记录创建时间
        if ($this->isNewRecord) {
            $this->create_at = date('Y-m-d H:i:s');
        }
        //记录修改审核时间
        $this->update_at = date('Y-m-d H:i:s');
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    /**
     * @param $cid
     * @param string $split
     * @return string获取分类名称、极其父类名称
     */
    public function getCategoryNames($cid, $split='|')
    {
        $data = $this->getTreeCategorys($cid);
        $categoryName = '';
        foreach ($data as $key=>$val) {
            $categoryName .= $val['name'] . $split;
        }
        return trim($categoryName, $split);
    }

    /**
     * 获取分类、极其父类
     * @param $cid
     */
    public function getTreeCategorys($cid,&$treeList=[])
    {
        $info = self::findOne($cid);
        if ($info ) {
            $treeList[] = $info;
            if ($info['parent_id']) {
                $this->getTreeCategorys($info['parent_id'], $treeList);
            }
        }

        return array_reverse($treeList);
    }

    /**
     * 新增
     * @param unknown $data
     * @return number|string
     */
    public function add($data)
    {
        $res = Yii::$app->productDb->createCommand()->insert('category',  $data)->execute();

        if (!$res) {
            return false;
        }

        return Yii::$app->productDb->getLastInsertID();
    }

    /**
     * 第三方平台excel 导入时查询一二三级类目是否存在
     * @param $category array  1=>"一级类目名称"
     * @return bool ,id 为类目存在，false 为类目不存在
     */
    public static function getCateExist($category){
        if(!is_array($category)){
            return false;
        }
        $level1 = $category[1]; // 第一级类目名称
        $level2 = $category[2]; // 第二级类目名称
        $level3 = $category[3]; // 第三级类目名称
        $res = self::find()->select(['id'])->where(['name'=>$level1,'level'=>1])->asArray()->one();
        if(!empty($res)){
            $res = self::find()->select(['id'])->where(['name'=>$level2,'level'=>2])->asArray()->one();
            if(!empty($res)){
                $res = self::find()->select(['id'])->where(['name'=>$level3,'level'=>3])->asArray()->one();
                if(!empty($res)){
                    return $res['id']; // 找到了,返回第三级类目的id
                }
            }
        }
        return false;
    }
}
