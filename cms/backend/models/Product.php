<?php

namespace backend\models;

use Yii;

/**
 * This is the model class for table "product".
 *
 * @property string $id
 * @property string $name 商品名称
 * @property string $sub_name 商品副标题
 * @property string $wholesaler_id 供应商id
 * @property int $status 状态：1-上架,2-下架
 * @property string $images 商品图片，图片可多张，json数组格式存储
 * @property string $description 商品描述，html格式
 * @property string $unit 单位
 * @property string $third_category_id 三级分类id
 * @property string $sort 权重
 * @property string $create_at 创建时间
 * @property string $update_at 更新时间
 * @property int $del 是否删除：1-正常，2-删除
 */
class Product extends \yii\db\ActiveRecord
{
    const STATUS_ONLINE = 1;//上架
    public $wholesaler_name;
    public $category_name;

    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'product';
    }

    /**
     * @return \yii\db\Connection the database connection used by this AR class.
     */
    public static function getDb()
    {
        return Yii::$app->get('productDb');
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['name', 'wholesaler_id', /*'description', */'third_category_id'], 'required'],
            [['wholesaler_id', 'status', 'third_category_id', 'sort', 'del'], 'integer'],
            [['description'], 'string'],
            [['create_at', 'update_at'], 'safe'],
            [['name','sub_name'], 'string', 'max' => 255],
            [['images'], 'string', 'max' => 1024],
            [['unit'], 'string', 'max' => 20],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'name' => '商品名称',
            'sub_name' => '商品副标题',
            'wholesaler_id' => '供应商ID',
            'status' => '状态',
            'images' => '商品图片',
            'description' => '商品描述',
            'unit' => '单位',
            'create_at' => 'Create At',
            'update_at' => 'Update At',
            'third_category_id' => '三级分类',
            'sort' => '权重',
            'category.name' => '分类',
            'del' => 'Del',
            'wholesaler.name' => '供应商'
        ];
    }

    public function getWholesaler()
    {
        return $this->hasOne(Wholesaler::className(), ['id' => 'wholesaler_id']);
    }

    // 规格表
    public function getSpecification()
    {
        return $this->hasMany(Specification::className(), ['product_id' => 'id']);
    }

    public function getCategory()
    {
        return $this->hasOne(Category::className(), ['id' => 'third_category_id']);
    }

    public function beforeSave($insert)
    {
        //记录创建时间
        if ($this->isNewRecord) {
            $this->create_at = date('Y-m-d H:i:s');
        }
        //记录修改审核时间
        $this->update_at = date('Y-m-d H:i:s');
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

}
